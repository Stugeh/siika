// This file is auto generated by /tools/AstGenerator.go

package ast

import . "gka.com/front-end"

type Stmt interface {
	Print() []rune
	stmtNode()
}

type (
	BlockStmt struct {
		Statements []Stmt
	}
	ClassStmt struct {
		Name       Token
		Superclass VariableExpr
		Methods    []FunctionStmt
	}
	ExpressionStmt struct {
		Expression Expr
	}
	FunctionStmt struct {
		Name   Token
		Params []Token
		Body   []Stmt
	}
	IfStmt struct {
		Condition  Expr
		ThenBranch Stmt
		ElseBranch Stmt
	}
	PrintStmt struct {
		Expression Expr
	}
	ReturnStmt struct {
		Keyword Token
		Value   Expr
	}
	VarStmt struct {
		Name        Token
		Initializer Expr
	}
	WhileStmt struct {
		Condition Expr
		Body      Stmt
	}
)

// Ensure that only Stmt nodes can be assigned to Stmt fields
func (*BlockStmt) stmtNode()      {}
func (*ClassStmt) stmtNode()      {}
func (*ExpressionStmt) stmtNode() {}
func (*FunctionStmt) stmtNode()   {}
func (*IfStmt) stmtNode()         {}
func (*PrintStmt) stmtNode()      {}
func (*ReturnStmt) stmtNode()     {}
func (*VarStmt) stmtNode()        {}
func (*WhileStmt) stmtNode()      {}
